# Test container for overlayfs operations with Deno support
FROM fedora:41

# Install required packages
RUN dnf install -y \
    curl \
    unzip \
    xz \
    util-linux \
    && dnf clean all

# Create persistent state directory only - system dir will be created by overlayfs-init
RUN mkdir -p /data/state && \
    chmod -R 777 /data/state

# Copy and set up overlayfs-init
COPY tests/image/overlayfs-init /usr/local/bin/
RUN chmod +x /usr/local/bin/overlayfs-init

# Install s6-overlay
ARG S6_OVERLAY_VERSION=3.1.6.2
RUN ARCH=$(uname -m) && \
    curl -L -f https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-noarch.tar.xz -o /tmp/s6-overlay-noarch.tar.xz && \
    curl -L -f https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-${ARCH}.tar.xz -o /tmp/s6-overlay-arch.tar.xz && \
    curl -L -f https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-symlinks-noarch.tar.xz -o /tmp/s6-overlay-symlinks.tar.xz && \
    tar -C / -Jxpf /tmp/s6-overlay-noarch.tar.xz && \
    tar -C / -Jxpf /tmp/s6-overlay-arch.tar.xz && \
    tar -C / -Jxpf /tmp/s6-overlay-symlinks.tar.xz && \
    rm /tmp/s6-overlay-*.tar.xz

# Install Deno
ENV DENO_VERSION=2.1.5
ENV INSIDE_DOCKER=1
RUN ARCH=$(uname -m) && \
    curl -fsSL https://github.com/denoland/deno/releases/download/v${DENO_VERSION}/deno-${ARCH}-unknown-linux-gnu.zip \
    -o deno.zip \
    && unzip deno.zip \
    && rm deno.zip \
    && chmod 755 deno \
    && mv deno /usr/bin/deno

WORKDIR /app

# Copy all Deno files first
COPY deno.json deno.lock ./
COPY mod.ts ./
COPY lib/ lib/
COPY tests/ tests/
COPY commands/ commands/

# Cache dependencies including tests
RUN deno cache --lock=deno.lock mod.ts && \
    deno cache --lock=deno.lock tests/migrate_test.ts

# Copy s6 configuration
COPY tests/image/s6/env/* /etc/s6/env.d/
# Copy test-runner service to correct s6-overlay v3 path
COPY tests/image/s6/test-runner/ /etc/s6-overlay/s6-rc.d/test-runner/

# Add test-runner to user bundle so it starts with container
RUN mkdir -p /etc/s6-overlay/s6-rc.d/user/contents.d && \
    touch /etc/s6-overlay/s6-rc.d/user/contents.d/test-runner && \
    chmod +x /etc/s6-overlay/s6-rc.d/test-runner/run && \
    chmod +x /etc/s6-overlay/s6-rc.d/test-runner/finish

# Add type file to indicate this is a longrun service
RUN echo "longrun" > /etc/s6-overlay/s6-rc.d/test-runner/type

# Set up s6 init
ENTRYPOINT ["/usr/local/bin/overlayfs-init", "/init"] 