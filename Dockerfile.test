# Test container for overlayfs operations with Deno support
FROM fedora:41

# Install required packages
RUN dnf install -y \
    curl \
    unzip \
    xz \
    util-linux \
    util-linux-core \
    && dnf clean all

# Create persistent state directory only - system dir will be created by overlayfs-init
RUN mkdir -p /data/state && \
    chmod -R 777 /data/state

# Copy and set up entrypoint
COPY tests/image/entrypoint /usr/local/bin/
RUN chmod +x /usr/local/bin/entrypoint

# Install s6-overlay
ARG S6_OVERLAY_VERSION=3.1.6.2
RUN ARCH=$(uname -m) && \
    curl -L -f https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-noarch.tar.xz -o /tmp/s6-overlay-noarch.tar.xz && \
    curl -L -f https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-${ARCH}.tar.xz -o /tmp/s6-overlay-arch.tar.xz && \
    curl -L -f https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-symlinks-noarch.tar.xz -o /tmp/s6-overlay-symlinks.tar.xz && \
    tar -C / -Jxpf /tmp/s6-overlay-noarch.tar.xz && \
    tar -C / -Jxpf /tmp/s6-overlay-arch.tar.xz && \
    tar -C / -Jxpf /tmp/s6-overlay-symlinks.tar.xz && \
    rm /tmp/s6-overlay-*.tar.xz

# Install Deno
ENV DENO_VERSION=2.1.5
ENV INSIDE_DOCKER=1
RUN ARCH=$(uname -m) && \
    curl -fsSL https://github.com/denoland/deno/releases/download/v${DENO_VERSION}/deno-${ARCH}-unknown-linux-gnu.zip \
    -o deno.zip \
    && unzip deno.zip \
    && rm deno.zip \
    && chmod 755 deno \
    && mv deno /usr/bin/deno

WORKDIR /app

# Copy all Deno files first
COPY deno.json deno.lock ./
COPY mod.ts ./
COPY lib/ lib/
COPY tests/ tests/
COPY commands/ commands/

# Cache dependencies including all test files
RUN deno cache --lock=deno.lock mod.ts tests/**/*_test.ts

# Set up test-runner service
RUN mkdir -p /etc/s6-overlay/s6-rc.d/test-runner && \
    mkdir -p /etc/s6-overlay/s6-rc.d/user/contents.d && \
    echo "oneshot" > /etc/s6-overlay/s6-rc.d/test-runner/type && \
    touch /etc/s6-overlay/s6-rc.d/user/contents.d/test-runner

# Copy and set up test-runner service
COPY tests/image/s6/test-runner/up /etc/s6-overlay/s6-rc.d/test-runner/
RUN chmod +x /etc/s6-overlay/s6-rc.d/test-runner/up

# Disable legacy services and configure s6
ENV S6_BEHAVIOUR_IF_STAGE2_FAILS=0 \
    S6_DISABLE_LEGACY=1 \
    S6_LOGGING=0 \
    S6_VERBOSITY=1

# Set up s6 init
ENTRYPOINT ["/usr/local/bin/entrypoint"]
CMD ["/init"]
